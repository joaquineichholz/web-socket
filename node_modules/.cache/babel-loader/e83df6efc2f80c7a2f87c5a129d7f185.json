{"ast":null,"code":"var _jsxFileName = \"/home/joaquin/Escritorio/t03-taller_integracion/src/App.js\";\nimport React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport Disconnect from './components/disconnect';\nimport Connect from './components/connect';\nimport Stock from './components/stock';\nimport Price from './components/prices';\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\nconst socket = io(protocolo + servidor, {\n  path: ruta\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stock: [],\n      prices: []\n    };\n  }\n\n  componentDidMount() {\n    console.log('Página montada');\n    console.log('Encendiendo socket');\n    socket.emit(\"EXCHANGES\", data => {\n      console.log(data);\n    });\n    socket.on(\"UPDATE\", data => {});\n    socket.on(\"BUY\", data => {});\n    socket.on(\"SELL\", data => {});\n  }\n\n  render() {\n    //console.log(this.state.data)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }\n    }, \" Mercado de acciones  \"), /*#__PURE__*/React.createElement(Stock, {\n      className: \"customers\",\n      stock: this.state.stock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Price, {\n      prices: this.state.prices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;\n/*import React, { Component } from 'react';\nimport './App.css';\n//import Graph from './components/graph';\nimport io from 'socket.io-client';\nimport './css/navbar.css'\n\nimport Disconnect from './components/disconnect';\nimport Connect from './components/connect';\nimport Stock from './components/stock';\nimport Price from './components/prices';\n\n\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\n\nconst socket = io(protocolo + servidor , {\n  path: ruta\n  });\n\n\n\n\n\n\n\nclass App extends Component {\n\n  state = {\n      stock: [\n      ],\n\n      prices: [\n\n      ]\n  }\n  update = (current) => {    \n    //console.log(this.state.prices)\n    var new_ticker = true;\n\n    this.setState({prices: this.state.prices.map( data => {  \n        if (data.ticker === current.ticker) {\n          data.value.push(current.value)\n          data.time.push(current.time)\n          var j = 1;\n          var value = 0;\n          var i = 0;\n            for (i=0; i < data.value.length; i++) {\n              console.log(data.value[i])\n                value += data.value[i]\n                j += 1\n            }\n            console.log(value)\n            value = value\n          data.avg = value\n\n          new_ticker = false\n        }\n        return data\n       }\n        )\n        \n    })\n  \n  if (new_ticker) {\n    var new_price = this.state.prices\n\n    new_price.push({\n      ticker: current.ticker,\n      value: [current.value],\n      avg: current.value,\n      time: [current.time]\n     })\n\n    this.setState({prices: new_price})\n    }\n\n  }\n\n\n  add_sell_stock = (current) => {\n    var new_sell = true;\n    \n    this.setState({stocks: this.state.stock.map( data => {\n      //console.log(data.ticker, '==', current.ticker)\n      if (data.ticker === current.ticker) {\n        data.volume += current.volume\n        new_sell = false\n      }\n      return data\n    })\n  \n  })\n\n  if (new_sell) {\n\n    var new_stock = this.state.stock\n     new_stock.push({\n      ticker: current.ticker,\n      volume: current.volume,\n      time: current.time,\n      high: 0,\n      low: 99999999999999999999,\n      last_price: 0,\n      delta_price:0\n\n     })\n\n    this.setState({stocks: new_stock})\n    }\n  }\n\n  disconnect = (e) => {\n    socket.disconnect();\n        console.log('###############################################');\n        console.log('################## DISCONNECT #################');\n        console.log('###############################################');\n  }\n\n  connect = (e) => {\n    socket.connect();\n    console.log('###############################################');\n    console.log('##################  CONNECT   #################');\n    console.log('###############################################');\n  }\n\n\n\n  componentDidMount() {\n    console.log('Página montada')\n    console.log('Encendiendo socket')\n\n    socket.emit(\"EXCHANGES\", (data) => {\n      console.log(data);\n    })\n\n    socket.on(\"UPDATE\", (data) => {\n      this.update(data)\n    });\n       \n    socket.on(\"BUY\", (data) => {\n\n    });\n\n    socket.on(\"SELL\", (data) => {\n      this.add_sell_stock(data)\n    });\n    \n  }\n\n    \n\n  render() {\n\n    //console.log(this.state.data)\n    return (\n      <div className=\"App\">\n\n        <ul className=\"nav-ul\">\n          <li className=\"nav-li\"> <Disconnect disconnect={this.disconnect} />  </li>\n          <li className=\"nav-li\"><Connect connect={this.connect} /></li>\n        </ul>\n         <h1> Mercado de acciones  </h1>\n\n        <Stock className=\"customers\" stock={this.state.stock}/>\n        <Price  prices={this.state.prices}/> \n      </div>\n      );\n    }\n}\n\n\n\n\n\nexport default App;\n*/","map":{"version":3,"sources":["/home/joaquin/Escritorio/t03-taller_integracion/src/App.js"],"names":["React","Component","io","Disconnect","Connect","Stock","Price","protocolo","servidor","ruta","socket","path","App","state","stock","prices","componentDidMount","console","log","emit","data","on","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,EAAP,MAAe,kBAAf;AAGA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAGA,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,QAAQ,GAAG,0BAAjB;AACA,MAAMC,IAAI,GAAG,SAAb;AAEA,MAAMC,MAAM,GAAGR,EAAE,CAACK,SAAS,GAAGC,QAAb,EAAwB;AACvCG,EAAAA,IAAI,EAAEF;AADiC,CAAxB,CAAjB;;AAKA,MAAMG,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BY,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE,EADH;AAIJC,MAAAA,MAAM,EAAE;AAJJ,KAFkB;AAAA;;AAY1BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEAR,IAAAA,MAAM,CAACS,IAAP,CAAY,WAAZ,EAA0BC,IAAD,IAAU;AACjCH,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACD,KAFD;AAIAV,IAAAA,MAAM,CAACW,EAAP,CAAU,QAAV,EAAqBD,IAAD,IAAU,CAC7B,CADD;AAGAV,IAAAA,MAAM,CAACW,EAAP,CAAU,KAAV,EAAkBD,IAAD,IAAU,CAE1B,CAFD;AAIAV,IAAAA,MAAM,CAACW,EAAP,CAAU,MAAV,EAAmBD,IAAD,IAAU,CAC3B,CADD;AAGD;;AAIDE,EAAAA,MAAM,GAAG;AAEP;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFH,eAIE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,WAAjB;AAA6B,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,KAAD;AAAQ,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASC;;AA9CuB;;AAqD5B,eAAeH,GAAf;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport io from 'socket.io-client';\n\n\nimport Disconnect from './components/disconnect';\nimport Connect from './components/connect';\nimport Stock from './components/stock';\nimport Price from './components/prices';\n\n\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\n\nconst socket = io(protocolo + servidor , {\n  path: ruta\n  });\n\n\nclass App extends Component {\n\n  state = {\n      stock: [\n      ],\n\n      prices: [\n\n      ]\n  }\n\n\n  componentDidMount() {\n    console.log('Página montada')\n    console.log('Encendiendo socket')\n\n    socket.emit(\"EXCHANGES\", (data) => {\n      console.log(data);\n    })\n\n    socket.on(\"UPDATE\", (data) => {\n    });\n       \n    socket.on(\"BUY\", (data) => {\n\n    });\n\n    socket.on(\"SELL\", (data) => {\n    });\n    \n  }\n\n    \n\n  render() {\n\n    //console.log(this.state.data)\n    return (\n      <div className=\"App\">\n\n         <h1> Mercado de acciones  </h1>\n\n        <Stock className=\"customers\" stock={this.state.stock}/>\n        <Price  prices={this.state.prices}/> \n      </div>\n      );\n    }\n}\n\n\n\n\n\nexport default App;\n\n/*import React, { Component } from 'react';\nimport './App.css';\n//import Graph from './components/graph';\nimport io from 'socket.io-client';\nimport './css/navbar.css'\n\nimport Disconnect from './components/disconnect';\nimport Connect from './components/connect';\nimport Stock from './components/stock';\nimport Price from './components/prices';\n\n\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\n\nconst socket = io(protocolo + servidor , {\n  path: ruta\n  });\n\n\n\n\n\n\n\nclass App extends Component {\n\n  state = {\n      stock: [\n      ],\n\n      prices: [\n\n      ]\n  }\n  update = (current) => {    \n    //console.log(this.state.prices)\n    var new_ticker = true;\n\n    this.setState({prices: this.state.prices.map( data => {  \n        if (data.ticker === current.ticker) {\n          data.value.push(current.value)\n          data.time.push(current.time)\n          var j = 1;\n          var value = 0;\n          var i = 0;\n            for (i=0; i < data.value.length; i++) {\n              console.log(data.value[i])\n                value += data.value[i]\n                j += 1\n            }\n            console.log(value)\n            value = value\n          data.avg = value\n\n          new_ticker = false\n        }\n        return data\n       }\n        )\n        \n    })\n  \n  if (new_ticker) {\n    var new_price = this.state.prices\n\n    new_price.push({\n      ticker: current.ticker,\n      value: [current.value],\n      avg: current.value,\n      time: [current.time]\n     })\n\n    this.setState({prices: new_price})\n    }\n\n  }\n\n\n  add_sell_stock = (current) => {\n    var new_sell = true;\n    \n    this.setState({stocks: this.state.stock.map( data => {\n      //console.log(data.ticker, '==', current.ticker)\n      if (data.ticker === current.ticker) {\n        data.volume += current.volume\n        new_sell = false\n      }\n      return data\n    })\n  \n  })\n\n  if (new_sell) {\n\n    var new_stock = this.state.stock\n     new_stock.push({\n      ticker: current.ticker,\n      volume: current.volume,\n      time: current.time,\n      high: 0,\n      low: 99999999999999999999,\n      last_price: 0,\n      delta_price:0\n\n     })\n\n    this.setState({stocks: new_stock})\n    }\n  }\n\n  disconnect = (e) => {\n    socket.disconnect();\n        console.log('###############################################');\n        console.log('################## DISCONNECT #################');\n        console.log('###############################################');\n  }\n\n  connect = (e) => {\n    socket.connect();\n    console.log('###############################################');\n    console.log('##################  CONNECT   #################');\n    console.log('###############################################');\n  }\n\n\n\n  componentDidMount() {\n    console.log('Página montada')\n    console.log('Encendiendo socket')\n\n    socket.emit(\"EXCHANGES\", (data) => {\n      console.log(data);\n    })\n\n    socket.on(\"UPDATE\", (data) => {\n      this.update(data)\n    });\n       \n    socket.on(\"BUY\", (data) => {\n\n    });\n\n    socket.on(\"SELL\", (data) => {\n      this.add_sell_stock(data)\n    });\n    \n  }\n\n    \n\n  render() {\n\n    //console.log(this.state.data)\n    return (\n      <div className=\"App\">\n\n        <ul className=\"nav-ul\">\n          <li className=\"nav-li\"> <Disconnect disconnect={this.disconnect} />  </li>\n          <li className=\"nav-li\"><Connect connect={this.connect} /></li>\n        </ul>\n         <h1> Mercado de acciones  </h1>\n\n        <Stock className=\"customers\" stock={this.state.stock}/>\n        <Price  prices={this.state.prices}/> \n      </div>\n      );\n    }\n}\n\n\n\n\n\nexport default App;\n*/"]},"metadata":{},"sourceType":"module"}