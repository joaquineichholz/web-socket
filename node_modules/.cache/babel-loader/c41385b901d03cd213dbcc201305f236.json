{"ast":null,"code":"var _jsxFileName = \"/home/joaquin/Escritorio/web-socket/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; //import Graph from './components/graph';\n\nimport io from 'socket.io-client';\nimport './css/navbar.css';\nimport Disconnect from './components/disconnect';\nimport Connect from './components/connect';\nimport Stock from './components/stock';\nimport Price from './components/prices';\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\nconst socket = io(protocolo + servidor, {\n  path: ruta\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stock: [],\n      prices: [],\n      exchange: [],\n      total_vol_exchange: 0\n    };\n\n    this.update = current => {\n      console.log(this.state.prices);\n      var new_ticker = true;\n      this.setState({\n        prices: this.state.prices.map(data => {\n          if (data.ticker === current.ticker) {\n            data.value.push(current.value);\n            data.time.push(current.time);\n            var j = 1;\n            var value = 0;\n            var i = 0;\n\n            for (i = 0; i < data.value.length; i++) {\n              //console.log(data.value[i])\n              value += data.value[i];\n              j += 1;\n            } //console.log(value)\n\n\n            value = value;\n            data.avg = value;\n            new_ticker = false;\n          }\n\n          return data;\n        })\n      });\n\n      if (new_ticker) {\n        var new_price = this.state.prices;\n        new_price.push({\n          ticker: current.ticker,\n          value: [current.value],\n          avg: current.value,\n          time: [current.time]\n        });\n        this.setState({\n          prices: new_price\n        });\n      }\n    };\n\n    this.update_stock = current => {\n      console.log(this.state.stock);\n      var new_sell = true;\n      this.setState({\n        stocks: this.state.stock.map(data => {\n          //console.log(data.ticker, '==', current.ticker)\n          if (data.ticker === current.ticker) {\n            if (data.high < current.value) {\n              data.high = current.value;\n            }\n\n            if (data.low > current.value) {\n              data.low = current.value;\n            }\n\n            data.delta_price = current.value / data.last_price - 1;\n            data.last_price = current.value;\n            data.time_x.push(current.time);\n            data.price_y.push(current.value);\n            new_sell = false;\n          }\n\n          return data;\n        })\n      });\n\n      if (new_sell) {\n        var new_stock = this.state.stock;\n        new_stock.push({\n          ticker: current.ticker,\n          volume: 0,\n          time: current.time,\n          high: 0,\n          low: 99999999999999999999,\n          last_price: 0,\n          delta_price: 0,\n          time_x: [],\n          price_y: []\n        });\n        this.setState({\n          stocks: new_stock\n        });\n      }\n    };\n\n    this.add_sell_stock = current => {\n      var new_sell = true;\n      this.setState({\n        stocks: this.state.stock.map(data => {\n          //console.log(data.ticker, '==', current.ticker)\n          if (data.ticker === current.ticker) {\n            data.volume += current.volume;\n            new_sell = false;\n          }\n\n          return data;\n        })\n      });\n\n      if (new_sell) {\n        var new_stock = this.state.stock;\n        new_stock.push({\n          ticker: current.ticker,\n          volume: current.volume,\n          time: current.time,\n          high: 0,\n          low: 99999999999999999999,\n          last_price: 0,\n          delta_price: 0,\n          time_x: [],\n          price_y: []\n        });\n        this.setState({\n          stocks: new_stock\n        });\n      }\n    };\n\n    this.disconnect = e => {\n      socket.disconnect();\n      socket.emit(\"EXCHANGES\", data => {\n        console.log(data);\n      });\n      console.log('###############################################');\n      console.log('################## DISCONNECT #################');\n      console.log('###############################################');\n    };\n\n    this.connect = e => {\n      socket.connect();\n      console.log('###############################################');\n      console.log('##################  CONNECT   #################');\n      console.log('###############################################');\n    };\n  }\n\n  componentDidMount() {\n    console.log('PÃ¡gina montada');\n    console.log('Encendiendo socket');\n    socket.emit(\"EXCHANGES\", data => {\n      console.log(data);\n    });\n    socket.on(\"UPDATE\", data => {\n      this.update(data);\n      this.update_stock(data);\n    });\n    socket.on(\"BUY\", data => {});\n    socket.on(\"SELL\", data => {\n      this.add_sell_stock(data);\n    });\n  }\n\n  render() {\n    //console.log(this.state.data)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav-ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Disconnect, {\n      disconnect: this.disconnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 35\n      }\n    }), \"  \"), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"nav-li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Connect, {\n      connect: this.connect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 34\n      }\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 10\n      }\n    }, \" Mercado de acciones  \"), /*#__PURE__*/React.createElement(Stock, {\n      className: \"customers\",\n      stock: this.state.stock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Price, {\n      prices: this.state.prices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/joaquin/Escritorio/web-socket/src/App.js"],"names":["React","Component","io","Disconnect","Connect","Stock","Price","protocolo","servidor","ruta","socket","path","App","state","stock","prices","exchange","total_vol_exchange","update","current","console","log","new_ticker","setState","map","data","ticker","value","push","time","j","i","length","avg","new_price","update_stock","new_sell","stocks","high","low","delta_price","last_price","time_x","price_y","new_stock","volume","add_sell_stock","disconnect","e","emit","connect","componentDidMount","on","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n//import Graph from './components/graph';\nimport io from 'socket.io-client';\nimport './css/navbar.css'\n\nimport Disconnect from './components/disconnect';\nimport Connect from './components/connect';\nimport Stock from './components/stock';\nimport Price from './components/prices';\n\n\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\n\nconst socket = io(protocolo + servidor , {\n  path: ruta\n  });\n\n\n\nclass App extends Component {\n\n  state = {\n      stock: [\n      ],\n\n      prices: [\n      ], \n\n      exchange: [\n\n      ],\n\n      total_vol_exchange: 0,\n\n  }\n  update = (current) => {    \n    console.log(this.state.prices)\n    var new_ticker = true;\n\n    this.setState({prices: this.state.prices.map( data => {  \n        if (data.ticker === current.ticker) {\n          data.value.push(current.value)\n          data.time.push(current.time)\n          var j = 1;\n          var value = 0;\n          var i = 0;\n            for (i=0; i < data.value.length; i++) {\n              //console.log(data.value[i])\n                value += data.value[i]\n                j += 1\n            }\n            //console.log(value)\n            value = value\n          data.avg = value\n\n          new_ticker = false\n        }\n        return data\n       }\n        )\n        \n    })\n\n  \n  if (new_ticker) {\n    var new_price = this.state.prices\n\n    new_price.push({\n      ticker: current.ticker,\n      value: [current.value],\n      avg: current.value,\n      time: [current.time]\n     })\n\n    this.setState({prices: new_price})\n    }\n\n  }\n\n\n  update_stock = (current) => {\n\n    console.log(this.state.stock)\n    var new_sell = true;\n    \n    this.setState({stocks: this.state.stock.map( data => {\n          //console.log(data.ticker, '==', current.ticker)\n          if (data.ticker === current.ticker) {\n            if (data.high < current.value) {\n              data.high = current.value;\n            }\n            if (data.low > current.value) {\n              data.low = current.value;\n            }\n            data.delta_price = current.value / data.last_price - 1\n            data.last_price = current.value;\n\n            data.time_x.push(current.time)\n            data.price_y.push(current.value)\n            new_sell = false\n          }\n          return data\n        })\n      \n      })\n\n      if (new_sell) {\n\n        var new_stock = this.state.stock\n        new_stock.push({\n          ticker: current.ticker,\n          volume: 0,\n          time: current.time,\n          high: 0,\n          low: 99999999999999999999,\n          last_price: 0,\n          delta_price:0, \n          time_x: [],\n          price_y: []\n        })\n        this.setState({stocks: new_stock})\n        }\n\n\n  }\n\n  add_sell_stock = (current) => {\n    var new_sell = true;\n    \n    this.setState({stocks: this.state.stock.map( data => {\n          //console.log(data.ticker, '==', current.ticker)\n          if (data.ticker === current.ticker) {\n            data.volume += current.volume\n            new_sell = false\n          }\n          return data\n        })\n      \n      })\n\n      if (new_sell) {\n\n        var new_stock = this.state.stock\n        new_stock.push({\n          ticker: current.ticker,\n          volume: current.volume,\n          time: current.time,\n          high: 0,\n          low: 99999999999999999999,\n          last_price: 0,\n          delta_price:0, \n          time_x: [],\n          price_y: []\n        })\n        this.setState({stocks: new_stock})\n        }\n      }\n\n    disconnect = (e) => {\n      socket.disconnect();\n      socket.emit(\"EXCHANGES\", (data) => {\n        console.log(data);\n      })\n          console.log('###############################################');\n          console.log('################## DISCONNECT #################');\n          console.log('###############################################');\n    }\n\n  connect = (e) => {\n    socket.connect();\n    console.log('###############################################');\n    console.log('##################  CONNECT   #################');\n    console.log('###############################################');\n  }\n\n\n\n  componentDidMount() {\n    console.log('PÃ¡gina montada')\n    console.log('Encendiendo socket')\n\n    socket.emit(\"EXCHANGES\", (data) => {\n      console.log(data);\n    })\n\n    socket.on(\"UPDATE\", (data) => {\n      this.update(data)\n      this.update_stock(data)\n    });\n       \n    socket.on(\"BUY\", (data) => {\n\n    });\n\n    socket.on(\"SELL\", (data) => {\n      this.add_sell_stock(data)\n    });\n    \n  }\n\n  render() {\n\n    //console.log(this.state.data)\n    return (\n      <div className=\"App\">\n\n        <ul className=\"nav-ul\">\n          <li className=\"nav-li\"> <Disconnect disconnect={this.disconnect} />  </li>\n          <li className=\"nav-li\"><Connect connect={this.connect} /></li>\n        </ul>\n         <h1> Mercado de acciones  </h1>\n\n        <Stock className=\"customers\" stock={this.state.stock}/>\n        <Price  prices={this.state.prices}/> \n      </div>\n      );\n    }\n}\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}